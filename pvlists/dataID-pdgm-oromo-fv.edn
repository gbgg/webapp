{:oromo-VBaseAffImprtvSmpl-beek "Base,Imperative,Affirmative:beek", :oromo-VBaseAffPastSmpl-beek "Base,Past,Affirmative:beek", :oromo-VBaseMainAffPresSmpl-beek "Base,Main,Present,Affirmative:beek", :oromo-VBaseMainNegPresSmpl-beek "Base,Main,Present,Negative:beek", :oromo-VBaseNegImprtvSmpl-beek "Base,Imperative,Negative:beek", :oromo-VBaseNegPastSmpl-beek "Base,Past,Negative:beek", :oromo-VBaseSubAffPresSmpl-beek "Base,Subordinate,Present,Affirmative:beek", :oromo-VBaseSubNegPresSmpl-beek "Base,Subordinate,Present,Negative:beek", :oromo-VCausAffImprtvSmpl-beek "S,Imperative,Affirmative:beek", :oromo-VCausAffPastSmpl-beek "S,Past,Affirmative:beek", :oromo-VCausMainAffPresSmpl-beek "S,Main,Present,Affirmative:beek", :oromo-VCausMainNegPresSmpl-beek "S,Main,Present,Negative:beek", :oromo-VCausNegImprtvSmpl-beek "S,Imperative,Negative:beek", :oromo-VCausNegPastSmpl-beek "S,Past,Negative:beek", :oromo-VCausSubAffPresSmpl-beek "S,Subordinate,Present,Affirmative:beek", :oromo-VCausSubNegPresSmpl-beek "S,Subordinate,Present,Negative:beek", :oromo-VCompoundTense "CompoundTense,Conditional,Affirmative:adeem CompoundTense,Conditional,Negative:adeem CompoundTense,FutureDefinite,Affirmative:adeem CompoundTense,FutureDefinite,Negative:adeem CompoundTense,FutureIndefinite,Affirmative:adeem CompoundTense,FutureIndefinite,Negative:adeem CompoundTense,FuturePerfect,Affirmative:adeem CompoundTense,FuturePerfect,Negative:adeem CompoundTense,PastProgressive,Affirmative:adeem CompoundTense,PastProgressive,Negative:adeem CompoundTense,Perfect,Affirmative:adeem CompoundTense,Perfect,Negative:adeem CompoundTense,Pluperfect,Affirmative:adeem CompoundTense,Pluperfect,Negative:adeem CompoundTense,PluperfectProgressive,Affirmative:adeem CompoundTense,PluperfectProgressive,Negative:adeem CompoundTense,PresentProgressive,Affirmative:adeem CompoundTense,PresentProgressive,Negative:adeem", :oromo-VJuss-beek "Base,Jussive,Affirmative:beek Base,Jussive,Negative:beek M,Jussive,Affirmative:beek M,Jussive,Negative:beek S,Jussive,Affirmative:beek S,Jussive,Negative:beek T,Jussive,Affirmative:beek T,Jussive,Negative:beek", :oromo-VMidAffImprtvSmpl-beek "T,Imperative,Affirmative:beek", :oromo-VMidAffPastSmpl-beek "T,Past,Affirmative:beek", :oromo-VMidMainAffPresSmpl-beek "T,Main,Present,Affirmative:beek", :oromo-VMidMainNegPresSmpl-beek "T,Main,Present,Negative:beek", :oromo-VMidNegImprtvSmpl-beek "T,Imperative,Negative:beek", :oromo-VMidNegPastSmpl-beek "T,Past,Negative:beek", :oromo-VMidSubAffPresSmpl-beek "T,Subordinate,Present,Affirmative:beek", :oromo-VMidSubNegPresSmpl-beek "T,Subordinate,Present,Negative:beek", :oromo-VPassAffImprtvSmpl-beek "M,Imperative,Affirmative:beek", :oromo-VPassAffPastSmpl-beek "M,Past,Affirmative:beek", :oromo-VPassMainAffPresSmpl-beek "M,Main,Present,Affirmative:beek", :oromo-VPassMainNegPresSmpl-beek "M,Main,Present,Negative:beek", :oromo-VPassNegImprtvSmpl-beek "M,Imperative,Negative:beek", :oromo-VPassNegPastSmpl-beek "M,Past,Negative:beek", :oromo-VPassSubAffPresSmpl-beek "M,Subordinate,Present,Affirmative:beek", :oromo-VPassSubNegPresSmpl-beek "M,Subordinate,Present,Negative:beek"}